set architecture "LIFCL"
set device "LIFCL-40"
set package "QFN72"
set speed "9_High-Performance_1.0V"
set WRAPPER_INST "lscc_gddr_inst"
set INTERFACE_TYPE "RECEIVE"
set IO_TYPE "LVDS"
set GEARING 1
set BUS_WIDTH 1
set OUT_WIDTH 1
set IN_WIDTH 0
set CLOCK_DATA_RELATION "CENTERED"
set DATA_PATH_DELAY "BYPASS"
set DATA_DELAY_ADJUSTMENT "DEFAULT"
set D_FINE_DEL_INPUT 0
set DATA_FINE_DELAY_VALUE "0"
set DATA_COARSE_DELAY_VALUE "0NS"
set CLOCK_PATH_DELAY "FIXED"
set INCLUDE_GDDR_SYNC 0
set TRISTATE_EN 0
set CLK_FREQ 128.000000
set PLL_ENABLE 0
set INTFBKDEL_SEL "DISABLED"
set PMU_WAITFORLOCK "ENABLED"
set REF_OSC_CTRL "3P2"
set REF_COUNTS "0000"
set EN_REFCLK_MON 0
set FVCO 900.000000
set CLKI_FREQ 25.000000
set CLKI_DIVIDER_ACTUAL_STR "1"
set FRAC_N_EN 0
set FBK_MODE "CLKOP"
set FBCLK_DIVIDER_ACTUAL_STR "6"
set SSC_N_CODE_STR "0b000000110"
set SSC_F_CODE_STR "0b000000000000000"
set SS_EN 0
set SSC_PROFILE "DOWN"
set SSC_TBASE_STR "0b000000000000"
set SSC_STEP_IN_STR "0b0000000"
set SSC_REG_WEIGHTING_SEL_STR "0b000"
set CLKOP_BYPASS 1
set ENCLKOP_EN 0
set CLKOP_FREQ_ACTUAL 150.000000
set CLKOP_PHASE_ACTUAL 0.000000
set DIVOP_ACTUAL_STR "5"
set DELA "5"
set PHIA "0"
set TRIM_EN_P 0
set CLKOP_TRIM_MODE "Falling"
set CLKOP_TRIM "0b0000"
set CLKOS_EN 1
set CLKOS_BYPASS 0
set ENCLKOS_EN 0
set CLKOS_FREQ_ACTUAL 100.000000
set CLKOS_PHASE_ACTUAL 0.000000
set DIVOS_ACTUAL_STR "7"
set DELB "7"
set PHIB "0"
set TRIM_EN_S 0
set CLKOS_TRIM_MODE "Falling"
set CLKOS_TRIM "0b0000"
set CLKOS2_EN 0
set CLKOS2_BYPASS 1
set ENCLKOS2_EN 0
set CLKOS2_FREQ_ACTUAL 100.000000
set CLKOS2_PHASE_ACTUAL 0.000000
set DIVOS2_ACTUAL_STR "7"
set DELC "7"
set PHIC "0"
set CLKOS3_EN 0
set CLKOS3_BYPASS 1
set ENCLKOS3_EN 0
set CLKOS3_FREQ_ACTUAL 100.000000
set CLKOS3_PHASE_ACTUAL 0.000000
set DIVOS3_ACTUAL_STR "7"
set DELD "7"
set PHID "0"
set CLKOS4_EN 0
set CLKOS4_BYPASS 1
set ENCLKOS4_EN 0
set CLKOS4_FREQ_ACTUAL 100.000000
set CLKOS4_PHASE_ACTUAL 0.000000
set DIVOS4_ACTUAL_STR "7"
set DELE "7"
set PHIE "0"
set CLKOS5_EN 0
set CLKOS5_BYPASS 1
set ENCLKOS5_EN 0
set CLKOS5_FREQ_ACTUAL 100.000000
set CLKOS5_PHASE_ACTUAL 0.000000
set DIVOS5_ACTUAL_STR "7"
set DELF "7"
set PHIF "0"
set PLL_REFCLK_FROM_PIN 0
set REF_CLK_IO_TYPE "LVDS"
set DYN_PORTS_EN 0
set PLL_RST 1
set LOCK_EN 1
set PLL_LOCK_STICKY 0
set LMMI_EN 0
set APB_EN 0
set LEGACY_EN 0
set POWERDOWN_EN 0
set IPI_CMP "0b0100"
set CSET "24P"
set CRIPPLE "3P"
set IPP_CTRL "0b0100"
set IPP_SEL "0b1111"
set BW_CTL_BIAS "0b1111"
set V2I_PP_RES "9K"
set KP_VCO "0b00011"
set V2I_KVCO_SEL "60"
set V2I_1V_EN "ENABLED"


#For PLL
set CLK_PERIOD     [expr {double(round(100000000/$CLKI_FREQ))/1000000}]
#For DDR 
set DDR_CLK_PERIOD [expr {double(round(1000000000/$CLK_FREQ))/1000000}]
##=================================================================================================================##
if {$PLL_ENABLE} {
	create_clock -name {pll_clki_i} -period [expr 10 * $CLK_PERIOD] [get_ports pll_clki_i]
}
if {$PLL_REFCLK_FROM_PIN} {
	ldc_set_port -iobuf IO_TYPE=$REF_CLK_IO_TYPE [get_ports pll_clki_i]
}
##=================================================================================================================##
### IO_TYPE constraints
##=================================================================================================================##
if {$INTERFACE_TYPE=="TRANSMIT"} {
	ldc_set_port -iobuf IO_TYPE=$IO_TYPE [get_ports clk_o]
	
	for {set i 0} {$i < $BUS_WIDTH} {incr i} {
		ldc_set_port -iobuf IO_TYPE=$IO_TYPE [get_ports data_o\[$i\]]
	}   
	  
    if {$GEARING == 1} {
       create_clock -name {clk_i} -period $DDR_CLK_PERIOD [get_ports clk_i]
	}
	  
    if {$GEARING != 1 & $PLL_ENABLE == 0} {
		if {$CLOCK_DATA_RELATION == "CENTERED"} {
			create_clock -name {eclk_i} -period $DDR_CLK_PERIOD [get_ports eclk_i]
		} else {
			create_clock -name {clk_i} -period $DDR_CLK_PERIOD [get_ports clk_i]
		}
	}
}

if {$INTERFACE_TYPE=="RECEIVE"} {
   ldc_set_port -iobuf IO_TYPE=$IO_TYPE [get_ports clk_i]
   for {set i 0} {$i < $BUS_WIDTH} {incr i} {
       ldc_set_port -iobuf IO_TYPE=$IO_TYPE [get_ports data_i\[$i\]]
   }
   create_clock -name {clk_i} -period $DDR_CLK_PERIOD [get_ports clk_i]
}
